# This is an example .goreleaser.yml file with some sensible defaults.
# Make sure to check the documentation at https://goreleaser.com

# The lines below are called `modelines`. See `:help modeline`
# Feel free to remove those if you don't want/need to use them.
# yaml-language-server: $schema=https://goreleaser.com/static/schema.json
# vim: set ts=2 sw=2 tw=0 fo=cnqoj

version: 2

before:
  hooks:
    # You may remove this if you don't use go modules.
    - go mod tidy

builds:
  - env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin

archives:
  - formats: [tar.gz]
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    # use zip for windows archives
    format_overrides:
      - goos: windows
        formats: [zip]

homebrew_casks:
  - name: muxly
    repository:
      owner: Pairadux
      name: homebrew-muxly
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"
    description: "A lightweight CLI for handling TMUX sessions with ease"
    homepage: "https://github.com/Pairadux/muxly"
    license: "MIT"
    # If your binary isn't signed/notarized, add this to prevent macOS quarantine issues:
    hooks:
      post:
        install: |
          if OS.mac?
            system_command "/usr/bin/xattr", args: ["-dr", "com.apple.quarantine", "#{staged_path}/muxly"]
          end

aurs:
  - name: muxly-bin
    homepage: "https://github.com/Pairadux/muxly"
    description: "A lightweight CLI for handling TMUX sessions with ease"
    maintainers:
      - "Pairadux"
    license: "MIT"
    private_key: "{{ .Env.AUR_SSH_PRIVATE_KEY }}"
    git_url: "ssh://aur@aur.archlinux.org/muxly-bin.git"

changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"

release:
  footer: >-

    ---

    Released by [GoReleaser](https://github.com/goreleaser/goreleaser).
